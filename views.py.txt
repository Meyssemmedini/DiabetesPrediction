views.py
from django.shortcuts import render
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression

def home(request):
    # your view logic here
    return render(request, 'home.html')
def predict(request):
    # your view logic here
    return render(request, 'predict.html')
def result(request):
    # Assuming you have the correct file path and column names in your dataset
    data = pd.read_csv(r"C:\Users\lenovo\Desktop\meriskill\Project 2 - Diabetes Data\diabetes.csv")

    # Assuming 'Outcome' is the target variable
    X = data.drop(labels='Outcome', axis=1)
    Y = data['Outcome']

    # Assuming 'train_test_split' was meant to be 'train_test_split'
    X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.2)

    model = LogisticRegression()
    model.fit(X_train, Y_train)
    # Correcting typo in 'Float' to 'float' for request.GET values
    val1 = float(request.GET.get('n1'))
    val2 = float(request.GET.get('n2'))
    val3 = float(request.GET.get('n3'))
    val4 = float(request.GET.get('n4'))
    val5 = float(request.GET.get('n5'))
    val6 = float(request.GET.get('n6'))
    val7 = float(request.GET.get('n7'))
    val8 = float(request.GET.get('n8'))

    # Correcting typo in 'pared' to 'pred'
    pred = model.predict([[val1, val2, val3, val4, val5, val6, val7, val8]])

    result1 = ""
    if pred == [1]:
        result1 = "Positive"
    elif pred == [0]:
        result1 = "Negative"

    return render(request, template_name="predict.html", context={"result1": result1})